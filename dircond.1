.\" dircond - directory content watcher daemon -*- nroff -*-
.\" Copyright (C) 2012, 2013 Sergey Poznyakoff
.\"
.\" Dircond is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the
.\" Free Software Foundation; either version 3 of the License, or (at your
.\" option) any later version.
.\"
.\" Dircond is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with dircond. If not, see <http://www.gnu.org/licenses/>.
.TH DIRCOND 1 "January 10, 2013" "DIRCOND" "Dircond User Reference"
.SH NAME
dircond \- directory content watcher
.SH SYNOPSIS
\fBdircond\fR [\fB\-adf\fR] [\fB\-F\fR \fIFACILITY\fR]\
 [\fB\-l\fR \fIN\fR]\
 [\fB\-P\fR \fIFILE\fR]\
 [\fB\-T\fR \fISECONDS\fR]
        [\fB\-t\fR \fITAG\fR]\
 [\fB\-u\fR \fIUSER\fR]
        [[\fB\-p\fR \fIEVENT\fR[,\fIFLAG\fR[,\fIFLAG\fR...]:][\fICOMMAND\fR]]
         \fIDIR\fR [\fIDIR\fR...]...]

.B dircond -h
.SH DESCRIPTION
.B Dircond
monitors a set of directories on the file system and reacts when
their content changes. The following changes are monitored:
file creation, file removal, file update, and move of a file between
directories. When a change is detected, the daemon reacts by invoking
the external command configured for that kind of change.
.PP
The monitored directories are called
.BR watchpoints .
When a directory is created within one of the watchpoints, it can
become a new watchpoint, if the command line options request so (see
\fB\-a\fR and \fB\-l\fR options below).
.PP
The monitored changes are grouped into
.BR events ,
each event being identified by its numeric ID or symbolic name. The
existing events are listed in the table below:
.IP 0.
(\fBcreate\fR) A file was created.
.IP 1.
(\fBdelete\fR) A file was deleted or moved out to another location.
.IP 2.
(\fBclose\fR) A file was written and closed or was moved in from
another location.
.PP
When an event is detected for which a handler is declared,
.B dircond
changes to the directory where the event occurred and invokes that
handler, passing it the description of the event in the
environment variables listed below. Apart from these variables, the
handler environment is inherited from the calling process. If you need
to restrict the environment, start
.B dircond
via
.BR env (1),
(see the section
.BR EXAMPLES ).
.PP
Information about the event is supplied to the handler in the following 
environment variables:
.TP
.B DIRCOND_EVENT_CODE
Event number as per the above table.
.TP
.B DIRCOND_EVENT
Event symbolic name, as shown in parentheses in the above table.
.TP
.B DIRCOND_FILE
The name of the affected file.
.SH HANDLERS AND WATCHPOINTS
.PP
Any non-optional arguments are treated as names of the directories
to monitor.  Handlers for these directories are specified using the
following command line option, which must precede the directory
arguments it applies to:
.TP
\fB\-p\fR \fIEVENT\fR[,\fIFLAG\fR[,\fIFLAG\fR...]:][\fICOMMAND\fR]
Define a handler to execute upon an event.  The \fIEVENT\fR argument
specifies the event to monitor.  It is either the event symbolic name
or its decimal code.  Optional flags instruct how to run
\fICOMMAND\fR.  The following flags are defined:
.RS
.TP
.B wait
Wait for the command to terminate before continuing the main loop.
This is the default.
.TP
.B nowait
Do not wait for the command to terminate, go to the next event right
away.  If the command fails to exit within the preconfigured time
frame (see the \fB\-T\fR command line) it will be terminated with the
signal 9 (\fBSIGKILL\fR).
.TP
\fBtimeout=\fIN\fR
Sets timeout for that handler.  If not supplied, the timeout is
supplied by the nearest prior
.B \-T
option.  The default timeout is 5 seconds.  Note, that the timeout
setting affects both
.BR wait " and " nowait
handlers, i.e. in any case, the handler that runs longer than that
amount of time will be terminated by
.BR SIGKILL .
.TP
.B stdout
Capture the command's standard output and log it using the default
logging channel.
.TP
.B stderr
Capture the command's standard error and log it using the default
logging channel.
.PP
If the \fICOMMAND\fR is empty, the previous definition of the
corresponding handler is forgotten.
.RE
.PP
The handler set by the
.B \-p
option remains in effect for all directories specified after it in the
command line, until the next
occurrence of the
.B \-p
option with the same \fIEVENT\fR part.
.SH OPTIONS
Most options have global effect, but some of them apply to handlers
and watchpoints that follow them in the command line.  These latter
remain in effect until the next occurrence of the same option, or end
of the command line, whichever occurs first.
.SS Global Options
.TP
.B \-d
Increase debug verbosity level.
.TP
.B \-f
Run in the foreground.
.TP
\fB\-F\fR \fIFACILITY\fR
Log under this syslog facility.  Allowed values for \fIFACILITY\fR are
a decimal number or any of the following symbolic names:
.BR auth ,
.BR authpriv ,
.BR cron ,
.BR daemon ,
.BR ftp ,
.BR local0 " through " local7 ,
.BR lpr ,
.BR mail ,
.BR news ,
.BR user ,
and
.BR uucp .

The option \fB\-F 0\fR directs the logging to the standard error.
.TP
\fB\-P\fR \fIFILE\fR
Write PID to \fIFILE\fR.
.TP
\fB\-t\fR \fITAG\fR
Log with this syslog tag.
.TP
\fB\-u\fR \fIUSER\fR
Run as this \fIUSER\fR.
.TP
\fB\-h\fR
Output a terse help summary and exit.
.SS Position-dependent options
.TP
.B \-a
Automatically watch created directories.  Whenever a new directory
appears under one of watchpoints, it is added to the list of
watchpoints.  Upon startup, the watchpoints affected by this option
are scanned recursively, and any directory located under them is added
to the watchpoint list.
.TP
\fB\-l\fR \fIN\fR
Automatically watch new directories located up to Nth nesting level.
Any directory created under one of the watchpoints is added to the
list of watchpoints unless it is located more than \fIN\fR directories
under the root watchpoint.  Upon startup, the watchpoints affected by
this option are scanned recursively up to \fIN\fR directories deep,
and any directory located under them is added to the watchpoint list.
.TP
\fB\-T\fR \fITIMEOUT\fR
Set execution timeout for external commands (seconds).
.SH "EXIT CODE"
.IP 0.
Successful termination.
.IP 1.
Command line usage error.
.IP 2.
Another error occurred.
.SH EXAMPLES
.nr step 0 1
.IP \n+[step].
Run as user \fBftp\fR monitoring changes in
.BR /var/ftp/upload .
Wherever a new file appears, start
.BR /usr/libexec/handler :
.sp
.nf
.in +2
$ \fBdircond \-u ftp \-p close,nowait:/usr/libexec/handler \\
  /var/ftp/upload\fR
.in
.fi
.IP \n+[step].
Same as above, but also clear the environment:
.sp
.nf
.in +2
$ \fBenv \- \fBdircond \-u ftp \-p close,nowait:/usr/libexec/handler \\
  /var/ftp/upload\fR
.nf
.IP \n+[step].
Watch two directories, using a separate handler for each of them:
.sp
.nf
.in +2
$ \fBdircond -p close:/usr/libexec/upload-handler /var/ftp/upload\\
          -p close:/usr/libexec/log-handler /var/log\fR
.nf
.SH "SEE ALSO"
.BR inotify (8).
.SH AUTHORS
Sergey Poznyakoff
.SH "BUG REPORTS"
Report bugs to <gray+dircond@gnu.org.ua>.
.SH COPYRIGHT
Copyright \(co 2012, 2013 Sergey Poznyakoff
.br
.na
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
.br
.ad
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.\" Local variables:
.\" eval: (add-hook 'write-file-hooks 'time-stamp)
.\" time-stamp-start: ".TH [A-Z_][A-Z0-9_.\\-]* [0-9] \""
.\" time-stamp-format: "%:B %:d, %:y"
.\" time-stamp-end: "\""
.\" time-stamp-line-limit: 20
.\" end:

